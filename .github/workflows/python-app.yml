name: Build and Deploy Frontend and Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  REGISTRY: muttenthaler.azurecr.io
  BACKEND_IMAGE_NAME: muttenthaler.azurecr.io/farmnote-backend:latest
  FRONTEND_IMAGE_NAME: muttenthaler.azurecr.io/farmnote-frontend:latest

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
    - name: Lint with pylint
      run: |
        pylint backend --fail-under 2
    - name: Test with pytest
      run: |
        pytest

  deploy:

    needs:
      - test
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log into Azure Container Registry
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.AZURE_USERNAME }}
          password: ${{ secrets.AZURE_PASSWORD }}

      # Build and push Backend Docker image
      - name: Build and push Backend Docker image
        id: build-backend
        uses: docker/build-push-action@v5
        with:
          context: backend
          tags: |
            ${{ env.BACKEND_IMAGE_NAME }}
            ${{ env.REGISTRY }}/farmnote-backend:${{ github.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Frontend Docker image
      - name: Build and push Frontend Docker image
        id: build-frontend
        uses: docker/build-push-action@v5
        with:
          context: frontend
          tags: |
            ${{ env.FRONTEND_IMAGE_NAME }}
            ${{ env.REGISTRY }}/farmnote-frontend:${{ github.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
