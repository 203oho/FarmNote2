{
  "openapi": "3.1.0",
  "info": {
    "title": "FarmNote",
    "summary": "Http API for the App FarmNote",
    "contact": {
      "name": "Your Name (Developer)",
      "url": "your repo url",
      "email": "your email"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000"
    }
  ],
  "paths": {
    "/notes/": {
      "post": {
        "tags": [
          "notes"
        ],
        "summary": "Create Note",
        "description": "Creates a new note for an existing session.",
        "operationId": "noteCreate",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "notes"
        ],
        "summary": "Read Notes",
        "description": "Return all note of an existing session.",
        "operationId": "noteReadList",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  },
                  "title": "Response Notereadlist"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/notes/{note_id}": {
      "get": {
        "tags": [
          "notes"
        ],
        "summary": "Read Note",
        "description": "Return a specific note.",
        "operationId": "noteRead",
        "parameters": [
          {
            "name": "note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Note Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Note Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notes"
        ],
        "summary": "Update Note",
        "description": "Changes an existing note.",
        "operationId": "noteUpdate",
        "parameters": [
          {
            "name": "note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Note Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Note Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notes"
        ],
        "summary": "Delete Note",
        "description": "Deletes an existing note.",
        "operationId": "noteDelete",
        "parameters": [
          {
            "name": "note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Note Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "404": {
            "description": "Note Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/session/": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Create Session",
        "description": "Creates a new user session and returns a random token of 6 characters. This session has two purposes:\n                    <ol>\n                        <li>Group notes together. If all notes are read, only those with the matching token are displayed</li>\n                        <li>Used for authentication. Without a token, notes cannot be created, read, updated or deleted.</li>\n                    </ol>",
        "operationId": "sessionCreate",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        }
      }
    },
    "/session/join": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Join Session",
        "description": "Joins an existing user session. Returns status code 200 with all session notes if the token exists, otherwise 404.",
        "operationId": "sessionJoin",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/session/qrcode": {
      "get": {
        "tags": [
          "session"
        ],
        "summary": "Get Session Qr Code",
        "description": "Returns a QR code with a link to the web frontend to join an existing user session.",
        "operationId": "sessionQrCode",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "image/png": {}
            }
          },
          "401": {
            "description": "Invalid Token Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPError": {
        "properties": {
          "detail": {
            "type": "string",
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "HTTPError",
        "description": "Schema for an arbitrary http error",
        "example": {
          "detail": "detailed error message"
        }
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Note": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          },
          "creation_date": {
            "type": "string",
            "format": "date-time",
            "title": "Creation Date"
          },
          "updated_date": {
            "type": "string",
            "format": "date-time",
            "title": "Updated Date"
          }
        },
        "type": "object",
        "required": [
          "content",
          "latitude",
          "longitude",
          "id",
          "session_id",
          "creation_date",
          "updated_date"
        ],
        "title": "Note",
        "description": "Schema of a note"
      },
      "NoteCreate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          }
        },
        "type": "object",
        "required": [
          "content",
          "latitude",
          "longitude"
        ],
        "title": "NoteCreate",
        "description": "Schema for creating a new note",
        "example": {
          "content": "Hello World",
          "latitude": 48.1271,
          "longitude": 15.1247
        }
      },
      "NoteUpdate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          }
        },
        "type": "object",
        "required": [
          "content",
          "latitude",
          "longitude"
        ],
        "title": "NoteUpdate",
        "description": "Schema for updating an existing note",
        "example": {
          "content": "Here is my update",
          "latitude": 48.1271,
          "longitude": 15.1247
        }
      },
      "Session": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "notes": {
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "type": "array",
            "title": "Notes",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "token",
          "id"
        ],
        "title": "Session",
        "description": "Schema of a session"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "tags": [
    {
      "name": "session",
      "description": "Manage sessions"
    },
    {
      "name": "notes",
      "description": "Manage notes"
    }
  ]
}